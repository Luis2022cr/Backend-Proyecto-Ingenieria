<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Endpoints y Descripciones</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f0f2f5;
      margin: 0;
      padding: 20px;
      color: #333;
    }

    h1 {
      text-align: center;
      color: #4a90e2;
      margin-bottom: 30px;
    }

    h2 {
      color: #333;
      border-bottom: 2px solid #4a90e2;
      padding-bottom: 5px;
      margin-bottom: 15px;
    }

    details {
      background-color: #ffffff;
      border: 1px solid #ddd;
      border-radius: 5px;
      margin-bottom: 15px;
      padding: 15px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    details summary {
      font-weight: bold;
      cursor: pointer;
      color: #4a90e2;
    }

    details summary:hover {
      color: #357abd;
    }

    ul {
      list-style-type: none;
      padding: 0;
    }

    li {
      margin-bottom: 10px;
    }

    pre {
      background-color: #f8f8f8;
      border-left: 4px solid #4a90e2;
      padding: 10px;
      border-radius: 3px;
      overflow-x: auto;
      white-space: pre-wrap;
      /* Allows text wrapping */
    }

    code {
      font-family: monospace;
      color: #e94e77;
    }
  </style>
</head>

<body>
  <h1>Endpoints y Descripciones</h1>

  <h2>Endpoints de Autenticación</h2>
  <details>
    <summary><code>POST /auth/login</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Autenticar usuario y generar un token JWT.</li>
      <li><strong>Instrucciones:</strong> Enviar el número de usuario y la contraseña en el cuerpo de la solicitud.</li>
      <li><strong>Ejemplo de solicitud:</strong>
        <pre>
{
  "numero_usuario": 12345,
  "contrasena": "password123"
}
        </pre>
      </li>
      <li><strong>Respuesta de éxito:</strong>
        <pre>
{
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzLCJub21icmVfdXN1YXJpbzEyMzQiLCJyb2xlX2lkIjoyLCJpYXQiOjE2NTc3MjAwMDB9.MH7n-9Ms2G9mA8ytYZk3-eX3e4q5s5NYFmf6M3O9oH8",
  "id": 123,
  "numero_usuario": 12345,
  "role_id": 2
}
        </pre>
      </li>
      <li><strong>Respuesta de error:</strong>
        <pre>
{
  "error": "Número de usuario o contraseña incorrectos"
}
        </pre>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>POST /auth/registro</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Registrar un nuevo usuario.</li>
      <li><strong>Instrucciones:</strong> Enviar los datos del nuevo usuario (nombre, apellido, correo institucional,
        número de usuario y contraseña) en el cuerpo de la solicitud.</li>
      <li><strong>Ejemplo de solicitud:</strong>
        <pre>
  {
    "nombre": "Juan",
    "apellido": "Pérez",
    "correo_institucional": "juan.perez@institucion.edu",
    "numero_usuario": 12345,
    "contrasena": "password123",
    "confirmacionContrasena": "password123",
    "carrera_id": 1
  }
        </pre>
      </li>
      <li><strong>Respuesta de éxito:</strong>
        <pre>
{
  "message": "Usuario registrado exitosamente"
}
        </pre>
      </li>
      <li><strong>Respuesta de error:</strong>
        <pre>
{
  "error": "El correo institucional ya está registrado"
}
        </pre>
        <pre>
{
  "error": "El número de usuario ya está en uso"
}
        </pre>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>POST /auth/generar-correo-recuperacion</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Solicitar un restablecimiento de contraseña para un usuario.</li>
      <li><strong>Instrucciones:</strong> Proporcionar el correo institucional del usuario en el cuerpo de la solicitud.
      </li>
      <li><strong>Ejemplo de solicitud:</strong></li>
      <pre>
{
  "correo_institucional": "ejemplo@unah.edu.hn"
}
      </pre>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
{
  "message": "Correo de restablecimiento de contraseña enviado"
}
        </pre>
      </li>
      <li><strong>Errores posibles:</strong>
        <ul>
          <li>400 Bad Request: <code>{ "error": "El correo institucional no está registrado" }</code></li>
          <li>500 Internal Server Error:
            <code>{ "error": "Error al solicitar el restablecimiento de contraseña" }</code>
          </li>
        </ul>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>POST /auth/reset-password</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Restablecer la contraseña de un usuario utilizando el token proporcionado.</li>
      <li><strong>Instrucciones:</strong> Proporcionar el token de restablecimiento y la nueva contraseña en el cuerpo
        de la solicitud.</li>
      <li><strong>Ejemplo de solicitud:</strong></li>
      <pre>
{
"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
"nuevaContrasena": "nueva_contrasena123",
"confirmacionContrasena": "nueva_contrasena123"
}
    </pre>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
{
"message": "Contraseña restablecida exitosamente"
}
      </pre>
      </li>
      <li><strong>Errores posibles:</strong>
        <ul>
          <li>400 Bad Request: <code>{ "error": "Las contraseñas no coinciden" }</code></li>
          <li>400 Bad Request: <code>{ "error": "Token inválido o expirado" }</code></li>
          <li>500 Internal Server Error: <code>{ "error": "Error al restablecer la contraseña" }</code></li>
        </ul>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>POST /auth/cambiar-password</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Cambiar la contraseña del usuario autenticado.</li>
      <li><strong>Instrucciones:</strong> Proporcionar la contraseña actual, la nueva contraseña y la confirmación de la
        nueva contraseña en el cuerpo de la solicitud. No es necesario proporcionar un token en los encabezados ya que
        la autenticación se maneja mediante middleware.</li>
      <li><strong>Ejemplo de solicitud:</strong></li>
      <pre>
POST /auth/cambiar-password
Content-Type: application/json
{
"contrasenaActual": "contrasena_actual123",
"nuevaContrasena": "nueva_contrasena123",
"confirmacionContrasena": "nueva_contrasena123"
}
</pre>
      <li><strong>Ejemplo de respuesta exitosa:</strong></li>
      <pre>
{
"message": "Contraseña cambiada exitosamente"
}
</pre>
      <li><strong>Errores posibles:</strong></li>
      <ul>
        <li><strong>400 Bad Request:</strong></li>
        <pre>
{
"error": "Las contraseñas no coinciden"
}
</pre>
        <li><strong>401 Unauthorized:</strong></li>
        <pre>
{
"error": "Contraseña actual incorrecta"
}
</pre>
        <li><strong>500 Internal Server Error:</strong></li>
        <pre>
{
"error": "Error al cambiar la contraseña"
}
</pre>
      </ul>
    </ul>

  </details>

  <h2>Endpoints de Carreras</h2>
  <details>
    <summary><code>GET /carreras</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Obtener una lista de todas las carreras.</li>
      <li><strong>Instrucciones:</strong> No requiere parámetros ni cuerpo en la solicitud.</li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
[
  {
    "id": 1,
    "nombre_carrera": "Ingeniería Informática",
    "descripcion": "Descripción de la carrera",
    "facultad": "Facultad de Ingeniería"
  },
  ...
]
        </pre>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>GET /carreras/:id</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Obtener una carrera por su ID.</li>
      <li><strong>Instrucciones:</strong> Proporcionar el ID de la carrera en la URL.</li>
      <li><strong>Ejemplo de solicitud:</strong> <code>/carreras/1</code></li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
{
  "id": 1,
  "nombre_carrera": "Ingeniería Informática",
  "descripcion": "Descripción de la carrera",
  "facultad": "Facultad de Ingeniería"
}
        </pre>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>POST /carreras</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Crear una nueva carrera.</li>
      <li><strong>Instrucciones:</strong> Enviar los datos de la nueva carrera (nombre_carrera, descripcion, facultad)
        en el cuerpo de la solicitud.</li>
      <li><strong>Ejemplo de solicitud:</strong>
        <pre>
{
  "nombre_carrera": "Ingeniería Informática",
  "descripcion": "Descripción de la carrera",
  "facultad": "Facultad de Ingeniería"
}
        </pre>
      </li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
{
  "message": "Carrera creada exitosamente"
}
        </pre>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>PUT /carreras/:id</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Actualizar una carrera existente.</li>
      <li><strong>Instrucciones:</strong> Proporcionar el ID de la carrera en la URL y enviar los nuevos datos de la
        carrera (nombre_carrera, descripcion, facultad) en el cuerpo de la solicitud.</li>
      <li><strong>Ejemplo de solicitud:</strong> <code>/carreras/1</code>
        <pre>
{
  "nombre_carrera": "Ingeniería Informática",
  "descripcion": "Nueva descripción de la carrera",
  "facultad": "Facultad de Ingeniería"
}
        </pre>
      </li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
{
  "message": "Carrera actualizada exitosamente"
}
        </pre>
      </li>
    </ul>
  </details>

  <h2>Endpoints de Estados</h2>
  <details>
    <summary><code>GET /estados</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Obtener una lista de todas los estados.</li>
      <li><strong>Instrucciones:</strong> No requiere parámetros ni cuerpo en la solicitud.</li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
[
  {
    "id": 1,
    "nombre_estado": "Aprobado",
    "descripcion": "Descripción de estado"
  },
  ...
]
        </pre>
      </li>
    </ul>
  </details>

  <h2>Endpoints de Ambitos</h2>
  <details>
    <summary><code>GET /ambitos</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Obtener una lista de todas los ambitos del articulo 140.</li>
      <li><strong>Instrucciones:</strong> No requiere parámetros ni cuerpo en la solicitud.</li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
[
  {
    "id": 1,
    "nombre_ambito": "Deportivo",
    "descripcion": "Area deportiva"
  },
  ...
]
        </pre>
      </li>
    </ul>
  </details>


  <h2>Endpoints de Usuarios</h2>
  <details>
    <summary><code>GET /usuarioCoordinador</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Obtener una lista de todas los usarios con el rol de Coordinador.</li>
      <li><strong>Instrucciones:</strong> No requiere parámetros ni cuerpo en la solicitud.</li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
          [
          {
            "id": 3,
            "nombre": "Carlos",
            "apellido": "Hernández",
            "correo_institucional": "carlos.hernandez@unah.edu.hn",
            "numero_usuario": 1001,
            "carrera_nombre": "Desarrollo Local"
          }
        ]
        </pre>
      </li>
    </ul>
  </details>

  <h2>Endpoints de Actividades</h2>

  <details>
    <summary><code>GET /actividades</code></summary>
    <ul>
        <li><strong>Descripción:</strong> Obtener una lista de todas las actividades. Puedes filtrar las actividades por estado utilizando el parámetro de consulta <code>estado</code>. Los valores posibles para <code>estado</code> son:
            <ul>
                <li><code>1</code> - En revisión</li>
                <li><code>2</code> - Aprobado</li>
                <li><code>3</code> - Rechazado</li>
            </ul>
        </li>
        <li><strong>Instrucciones:</strong> Utiliza el parámetro de consulta <code>estado</code> para filtrar los resultados. Por ejemplo, para obtener actividades con estado "Aprobado", la solicitud debería ser <code>/api/actividades?estado=2</code>. Si no se proporciona el parámetro <code>estado</code>, se devolverán todas las actividades.</li>
        <li><strong>Ejemplo de solicitud:</strong></li>
        <pre><code>
Para obtener todas las actividades:
GET /actividades

Para obtener actividades con estado "En Revisión":
GET /actividades?estado=1

Para obtener actividades con estado "Aprobado":
GET /actividades?estado=2

Para obtener actividades con estado "Rechazado":
GET /actividades?estado=3
        </code></pre>
        <li><strong>Ejemplo de respuesta:</strong></li>
        <pre><code>
[
    {
        "id": 4,
        "nombre_actividad": "Nueva Actividad",
        "objetivos": "Objetivo de la actividad",
        "actividades_principales": "Actividades principales",
        "descripcion": "Descripción de la actividad",
        "ubicacion": "Ubicación de la actividad",
        "carrera": "Ingeniería en Sistemas",
        "ambito": "Deportivo",
        "coordinador": "María González",
        "estudiante": "Juan Pérez",
        "horas_art140": 10,
        "cupos": 20,
        "cupos_disponibles": 20,
        "fecha": "2024-07-21T00:00:00.000Z",
        "hora_inicio": "08:00",
        "hora_final": "10:00",
        "fecha_entrega": "2024-07-22T04:39:00.467Z",
        "estado": "En Revisión",
        "observaciones": "Observaciones",
        "informe": null
    },
    ...
]
        </code></pre>
        <li><strong>Errores posibles:</strong></li>
        <ul>
            <li><strong>400 Bad Request:</strong> Si el valor del parámetro <code>estado</code> no es válido.
            <pre><code>
{
    "error": "Estado no válido"
}
            </code></pre></li>
            <li><strong>500 Internal Server Error:</strong> En caso de error en la base de datos o en el servidor.
            <pre><code>
{
    "error": "Error al obtener las actividades"
}
            </code></pre></li>
        </ul>
    </ul>
</details>

  <details>
    <summary><code>POST /actividades</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Crear una nueva actividad.</li>
      <li><strong>Instrucciones:</strong> Requiere un cuerpo JSON con los detalles de la actividad.</li>
      <li><strong>Ejemplo de solicitud:</strong>
        <pre>
          {
            "nombre_actividad": "Taller de Desarrollo Web",
            "objetivos": "Aprender las bases del desarrollo web utilizando tecnologías modernas.",
            "actividades_principales": "Clases teóricas y prácticas sobre HTML, CSS, y JavaScript.",
            "descripcion": "Clases teóricas y prácticas sobre HTML, CSS, y JavaScript.",
            "ubicacion": "Aula 101, Edificio Central",
            "ambito_id": 1,
            "estudiante_id": 2,
            "horas_art140": 20,
            "cupos": 30,
            "fecha": "2024-08-01T09:00:00",
            "hora_inicio": "09:00",
            "hora_final": "17:00",
            "observaciones": "Se requiere que los estudiantes traigan laptop."
        }
        
      </pre>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>PUT /actividades/:id</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Actualizar una actividad existente por ID.</li>
      <li><strong>Instrucciones:</strong> Requiere el parámetro <code>id</code> en la ruta y un cuerpo JSON con los
        detalles actualizados.</li>
      <li><strong>Ejemplo de solicitud:</strong>
        <pre>
          {
            "nombre_actividad": "Taller de Desarrollo Web",
            "objetivos": "Aprender las bases del desarrollo web utilizando tecnologías modernas.",
            "actividades_principales": "Clases teóricas y prácticas sobre HTML, CSS, y JavaScript.",
            "descripcion": "Clases teóricas y prácticas sobre HTML, CSS, y JavaScript.",
            "ubicacion": "Aula 101, Edificio Central",
            "ambito_id": 3,
            "estudiante_id": 2,
            "horas_art140": 20,
            "cupos": 30,
            "fecha": "2024-08-01T09:00:00",
            "hora_inicio": "09:00",
            "hora_final": "17:00",
            "observaciones": "Se requiere que los estudiantes traigan laptop."
        }
        
      </pre>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>PATCH /actividades/:id/estado</code></summary>
    <ul>
        <li><strong>Descripción:</strong> Actualizar el estado de una actividad.</li>
        <li><strong>Instrucciones:</strong> Proporcionar el ID de la actividad en la URL y el nuevo estado en el cuerpo de la solicitud. El estado puede ser <code>1</code> (En revisión), <code>2</code> (Aprobado) o <code>3</code> (Rechazado). Si el estado es <code>3</code> (Rechazado), es obligatorio proporcionar una observación.</li>
        <li><strong>Ejemplo de solicitud:</strong></li>
        <pre><code>
Solo se debe enviar un estado de los tres posibles:

{
  "estado": 1
}
o
{
  "estado": 2
}
o
{
  "estado": 3,
  "observacion": "Explicación detallada del rechazo"
}
        </code></pre>
        <li><strong>Ejemplo de respuesta exitosa:</strong></li>
        <pre><code>
{
  "message": "Estado de la actividad actualizado exitosamente"
}
        </code></pre>
        <li><strong>Errores posibles:</strong></li>
        <ul>
            <li><strong style="color:red">400 Bad Request:</strong></li>
            <pre><code>
{
  "error": "Estado no válido"
}
            </code></pre>
            <li><strong style="color:red">400 Bad Request:</strong></li>
            <pre><code>
{
  "error": "La observación es obligatoria cuando el estado es Rechazado"
}
            </code></pre>
            <li><strong style="color:red">404 Not Found:</strong></li>
            <pre><code>
{
  "error": "Actividad no encontrada"
}
            </code></pre>
            <li><strong style="color:red">500 Internal Server Error:</strong></li>
            <pre><code>
{
  "error": "Error al actualizar el estado de la actividad"
}
            </code></pre>
        </ul>
    </ul>
</details>


  <h2>Endpoints de ActividadesParticipantes</h2>

  <details>
    <summary><code>GET /actividades/:id/participantes</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Obtener una lista de todos los participantes de una actividad específica.</li>
      <li><strong>Instrucciones:</strong> Requiere el parámetro <code>id</code> en la URL para identificar la actividad.
      </li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
          {
            "id": 2,
            "nombre_actividad": "Taller de Desarrollo Web",
            "fecha": "2024-08-01T09:00:00",
            "participantes": [
              {
                "id": 20182100278,
                "nombre": "Jose Luis",
                "apellido": "Contreras",
                "numero_usuario": 215430278,
                "correo_institucional": "jcont@unah.hn",
                "carrera_nombre": "Ingeniería en Sistemas"
              },
              {
                "id": 20182100278,
                "nombre": "Jose Luis",
                "apellido": "Contreras",
                "numero_usuario": 201821008,
                "correo_institucional": "cntres@unah.hn",
                "carrera_nombre": "Ingeniería en Sistemas"
              },
              {
                "id": 20182100278,
                "nombre": "Jose Luis",
                "apellido": "Contreras",
                "numero_usuario": 20268778,
                "correo_institucional": "jcontreras@unah.hn",
                "carrera_nombre": "Ingeniería en Sistemas"
              }
            ]
          }
      </pre>
      </li>
    </ul>
  </details>

  <details>
    <summary><code>GET /usuarios/:id/actividades</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Obtener una lista de todas las actividades en las que un usuario específico está participando, filtrando por el estado con ID 4(finalizado).</li>
      <li><strong>Instrucciones:</strong> Requiere el parámetro <code>id</code> en la URL para identificar el usuario. La respuesta incluirá solo las actividades cuyo estado es 4 (finalizado).</li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
        [
          {
            "id": 20182100278,
            "nombre": "Jose Luis",
            "apellido": "Contreras",
            "correo_institucional": "jcontreras@unah.hn",
            "actividades": [
              {
                "id": 1,
                "nombre_actividad": "Taller de Desarrollo Web",
                "objetivos": "Aprender las bases del desarrollo web utilizando tecnologías modernas.",
                "actividades_principales": "Clases teóricas y prácticas sobre HTML, CSS, y JavaScript.",
                "descripcion": "Clases teóricas y prácticas sobre HTML, CSS, y JavaScript.",
                "ubicacion": "Aula 101, Edificio Central",
                "carrera_id": 2,
                "ambito_id": 3,
                "coordinador_id": 1,
                "estudiante_id": 5,
                "horas_art140": 20,
                "cupos": 30,
                "cupos_disponibles": 30,
                "fecha": "2024-08-01T09:00:00",
                "hora_inicio": "09:00",
                "hora_final": "17:00",
                "fecha_entrega": "2024-07-25T16:29:23-06:00",
                "estado_id": 4,
                "observaciones": "Se requiere que los estudiantes traigan laptop.",
                "informe": null
              },
              {
                "id": 2,
                "nombre_actividad": "Taller de Desarrollo Web Avanzado",
                "objetivos": "Profundizar en técnicas avanzadas de desarrollo web.",
                "actividades_principales": "Clases avanzadas sobre frameworks modernos.",
                "descripcion": "Clases avanzadas sobre frameworks modernos como React y Angular.",
                "ubicacion": "Aula 102, Edificio Central",
                "carrera_id": 2,
                "ambito_id": 3,
                "coordinador_id": 1,
                "estudiante_id": 5,
                "horas_art140": 20,
                "cupos": 30,
                "cupos_disponibles": 25,
                "fecha": "2024-09-01T09:00:00",
                "hora_inicio": "10:00",
                "hora_final": "18:00",
                "fecha_entrega": "2024-08-25T16:29:26-06:00",
                "estado_id": 4,
                "observaciones": "Material adicional será proporcionado.",
                "informe": null
              }
            ]
          }
        ]
        </pre>
      </li>
    </ul>
</details>


  <details>
    <summary><code>POST /participantes</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Añadir un participante a una actividad.</li>
      <li><strong>Instrucciones:</strong> Requiere un cuerpo JSON con los campos <code>id_usuario</code> e
        <code>id_actividad</code>.
      </li>
      <li><strong>Ejemplo de solicitud:</strong>
        <pre>
        {
          "id_usuario": 3,
          "id_actividad": 2
        }
      </pre>
      </li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
        {
          "message": "Participante agregado exitosamente"
        }
      </pre>
      </li>
    </ul>
  </details>
  <details>
    <summary><code>PUT /actividades-participantes</code></summary>
    <ul>
      <li><strong>Descripción:</strong> Elimina la participación de un usuario específico en una actividad.</li>
      <li><strong>Instrucciones:</strong> El cuerpo de la solicitud debe incluir el `id_usuario` y `id_actividad` para
        identificar al usuario y la actividad.</li>
      <li><strong>Ejemplo de solicitud:</strong>
        <pre>
{
  "id_usuario": 3,
  "id_actividad": 2
}
            </pre>
      </li>
      <li><strong>Ejemplo de respuesta:</strong>
        <pre>
{
  "message": "Participación eliminada exitosamente"
}
            </pre>
      </li>
      <li><strong>Posibles respuestas de error:</strong>
        <ul>
          <li><strong>400 Bad Request:</strong>
            <pre>
{
  "error": "id_usuario e id_actividad son requeridos"
}
                    </pre>
          </li>
          <li><strong>404 Not Found:</strong>
            <pre>
{
  "error": "Participación no encontrada"
}
                    </pre>
          </li>
        </ul>
      </li>
    </ul>
  </details>


</body>

</html>